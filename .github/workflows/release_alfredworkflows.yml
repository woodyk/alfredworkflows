on:
  push:
    branches:
      - "main"

name: Upload Release Asset

jobs:
  list-workflows:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.get-workflows.outputs.matrix }}
    steps:
      - name: Checkout code 
        uses: actions/checkout@v3

      - name: Get workflow names 
        id: get-workflows
        run: echo "matrix=$(ls *.alfredworkflow | jq -R -s -c 'split("\n")[:-1]')" >> $GITHUB_OUTPUT

  release:
    needs: list-workflows
    runs-on: ubuntu-latest
    permissions: write-all
    strategy:
      matrix:
        file: ${{ fromJson(needs.list-workflows.outputs.matrix) }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ matrix.file }} 
          release_name: ${{ matrix.file }} Release 
          draft: false
          prerelease: false

      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./${{ matrix.file }} 
          asset_name: ${{ matrix.file }} 
          asset_content_type: application/zip

